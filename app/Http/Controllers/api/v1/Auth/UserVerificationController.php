<?php/** * User: zara * Date: 2019-05-19 * Time: 18:14 */namespace Fronds\Http\Controllers\api\v1\Auth;use Fronds\Http\Controllers\api\ApiController;use Fronds\Http\Requests\UserInfoRequest;use Fronds\Lib\Exceptions\FrondsException;use Fronds\Services\UserServices\UserAuthService;use Illuminate\Http\JsonResponse;/** * Auth concerning users * Class UserVerificationController * @package Fronds\Http\Controllers\api\v1\Auth */class UserVerificationController extends ApiController{    /**     * @var UserAuthService     */    private $userAuthService;    /**     * UserVerificationController constructor.     * @param UserAuthService $userAuthService     */    public function __construct(UserAuthService $userAuthService)    {        $this->userAuthService = $userAuthService;    }    /**     * Retrieve the pre-login one time token for a given user/pass combo     * This is what the username and password are actually sent to.     * @param UserInfoRequest $userInfoRequest     * @return JsonResponse     */    public function loginToken(UserInfoRequest $userInfoRequest): JsonResponse    {        try {            $this->userAuthService->startUserVerify(                $userInfoRequest->input('email'),                $userInfoRequest->input('password')            );            $response = $this->apiSuccess('negotiations started');        } catch (FrondsException $frondsException) {            $response = $this->apiError($frondsException);        } finally {            return $response;        }    }}